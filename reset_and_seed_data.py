# reset_and_seed_data.py
from flask import Flask
from core.database import db
from app.models.user import User
from app.models.student import Student
from app.models.teacher import Teacher
from app.models.academic import Khoa, Nganh, Lop, HocPhan
from app.models.grade import Grade
from app.models.prediction import DiemThanhPhan, SinhVienStats

def create_app():
    app = Flask(__name__)
    app.config.from_object('core.config.Config')
    db.init_app(app)
    return app

def clear_all_data():
    """X√≥a t·∫•t c·∫£ d·ªØ li·ªáu trong database"""
    print("üóëÔ∏è X√≥a t·∫•t c·∫£ d·ªØ li·ªáu...")
    
    from sqlalchemy import text
    
    # Disable foreign key checks t·∫°m th·ªùi
    db.session.execute(text('SET FOREIGN_KEY_CHECKS = 0'))
    
    # X√≥a t·∫•t c·∫£ b·∫£ng
    db.session.query(SinhVienStats).delete()
    db.session.query(DiemThanhPhan).delete()
    db.session.query(Grade).delete()
    db.session.query(Student).delete()
    db.session.query(Teacher).delete()
    db.session.query(HocPhan).delete()
    db.session.query(Lop).delete()
    db.session.query(Nganh).delete()
    db.session.query(Khoa).delete()
    db.session.query(User).delete()
    
    # Enable l·∫°i foreign key checks
    db.session.execute(text('SET FOREIGN_KEY_CHECKS = 1'))
    
    db.session.commit()
    print("‚úÖ ƒê√£ x√≥a t·∫•t c·∫£ d·ªØ li·ªáu!")

def create_sample_data():
    """T·∫°o d·ªØ li·ªáu m·∫´u cho t·∫•t c·∫£ c√°c b·∫£ng"""
    print("üìù T·∫°o d·ªØ li·ªáu m·∫´u...")
    
    # 1. T·∫°o Users
    print("üë§ T·∫°o Users...")
    # Ch·ªâ t·∫°o teacher v√† student users v√¨ enum ch·ªâ c√≥ 2 gi√° tr·ªã n√†y
    teacher_user = User(username='teacher1', password='teacher123', role='teacher')
    student_user = User(username='student1', password='student123', role='student')
    
    db.session.add_all([teacher_user, student_user])
    db.session.commit()
    
    # 2. T·∫°o Khoa
    print("üè¢ T·∫°o Khoa...")
    khoa_cntt = Khoa(ma_khoa='CNTT', ten_khoa='C√¥ng ngh·ªá th√¥ng tin')
    khoa_kt = Khoa(ma_khoa='KT', ten_khoa='Kinh t·∫ø')
    khoa_nn = Khoa(ma_khoa='NN', ten_khoa='Ngo·∫°i ng·ªØ')
    
    db.session.add_all([khoa_cntt, khoa_kt, khoa_nn])
    db.session.commit()
    
    # 3. T·∫°o Ng√†nh
    print("üéì T·∫°o Ng√†nh...")
    nganh_ktpm = Nganh(ma_nganh='KTPM', ten_nganh='K·ªπ thu·∫≠t ph·∫ßn m·ªÅm', ma_khoa='CNTT')
    nganh_httt = Nganh(ma_nganh='HTTT', ten_nganh='H·ªá th·ªëng th√¥ng tin', ma_khoa='CNTT')
    nganh_qtkd = Nganh(ma_nganh='QTKD', ten_nganh='Qu·∫£n tr·ªã kinh doanh', ma_khoa='KT')
    nganh_ta = Nganh(ma_nganh='TA', ten_nganh='Ti·∫øng Anh', ma_khoa='NN')
    
    db.session.add_all([nganh_ktpm, nganh_httt, nganh_qtkd, nganh_ta])
    db.session.commit()
    
    # 4. T·∫°o L·ªõp
    print("üè´ T·∫°o L·ªõp...")
    lop_data = [
        ('KTPM2021A', 'K·ªπ thu·∫≠t ph·∫ßn m·ªÅm 2021A', 'KTPM'),
        ('KTPM2021B', 'K·ªπ thu·∫≠t ph·∫ßn m·ªÅm 2021B', 'KTPM'),
        ('HTTT2021A', 'H·ªá th·ªëng th√¥ng tin 2021A', 'HTTT'),
        ('QTKD2021A', 'Qu·∫£n tr·ªã kinh doanh 2021A', 'QTKD'),
        ('TA2021A', 'Ti·∫øng Anh 2021A', 'TA')
    ]
    
    for ma_lop, ten_lop, ma_nganh in lop_data:
        lop = Lop(ma_lop=ma_lop, ten_lop=ten_lop, ma_nganh=ma_nganh)
        db.session.add(lop)
    
    db.session.commit()
    
    # 5. T·∫°o Gi√°o vi√™n
    print("üë®‚Äçüè´ T·∫°o Gi√°o vi√™n...")
    teachers_data = [
        ('GV001', 'Nguy·ªÖn VƒÉn A', 'nam', '1980-05-15', '0901234567', 'nguyenvana@university.edu.vn', 'TP.HCM', 'L·∫≠p tr√¨nh'),
        ('GV002', 'Tr·∫ßn Th·ªã B', 'n·ªØ', '1985-08-20', '0907654321', 'tranthib@university.edu.vn', 'H√† N·ªôi', 'C∆° s·ªü d·ªØ li·ªáu'),
        ('GV003', 'L√™ VƒÉn C', 'nam', '1978-12-10', '0912345678', 'levanc@university.edu.vn', 'ƒê√† N·∫µng', 'Kinh t·∫ø'),
        ('GV004', 'Ph·∫°m Th·ªã D', 'n·ªØ', '1982-03-25', '0918765432', 'phamthid@university.edu.vn', 'TP.HCM', 'Ngo·∫°i ng·ªØ'),
        ('GV005', 'Ho√†ng VƒÉn E', 'nam', '1975-11-05', '0923456789', 'hoangvane@university.edu.vn', 'H√† N·ªôi', 'M·∫°ng m√°y t√≠nh')
    ]
    
    for ma_gv, ho_ten, gioi_tinh, ngay_sinh, so_dt, email, dia_chi, chuyen_mon in teachers_data:
        teacher = Teacher(
            ma_gv=ma_gv, ho_ten=ho_ten, gioi_tinh=gioi_tinh, 
            ngay_sinh=ngay_sinh, so_dt=so_dt, email=email, 
            dia_chi=dia_chi, chuyen_mon=chuyen_mon
        )
        db.session.add(teacher)
    
    db.session.commit()
    
    # 6. T·∫°o H·ªçc ph·∫ßn
    print("üìö T·∫°o H·ªçc ph·∫ßn...")
    hocphan_data = [
        ('IT001', 'Nh·∫≠p m√¥n l·∫≠p tr√¨nh', 3, 45, 'KTPM'),
        ('IT002', 'C∆° s·ªü d·ªØ li·ªáu', 3, 45, 'KTPM'),
        ('IT003', 'L·∫≠p tr√¨nh web', 4, 60, 'KTPM'),
        ('IT004', 'M·∫°ng m√°y t√≠nh', 3, 45, 'HTTT'),
        ('IT005', 'Ph√°t tri·ªÉn ·ª©ng d·ª•ng di ƒë·ªông', 4, 60, 'HTTT'),
        ('EC001', 'Kinh t·∫ø vi m√¥', 3, 45, 'QTKD'),
        ('EC002', 'Kinh t·∫ø vƒ© m√¥', 3, 45, 'QTKD'),
        ('EN001', 'Ti·∫øng Anh c∆° b·∫£n', 2, 30, 'TA'),
        ('EN002', 'Ti·∫øng Anh n√¢ng cao', 3, 45, 'TA')
    ]
    
    for ma_hp, ten_hp, so_dvht, so_tiet, ma_nganh in hocphan_data:
        hocphan = HocPhan(
            ma_hp=ma_hp, ten_hp=ten_hp, so_dvht=so_dvht,
            ma_nganh=ma_nganh
        )
        db.session.add(hocphan)
    
    db.session.commit()
    
    # 7. T·∫°o Sinh vi√™n
    print("üë®‚Äçüéì T·∫°o Sinh vi√™n...")
    students_data = [
        ('SV001', 'Nguy·ªÖn Th√†nh Nam', 'nam', '2003-01-15', '0981234567', 'nam.nguyen@student.edu.vn', 'TP.HCM', 'KTPM2021A'),
        ('SV002', 'Tr·∫ßn Th·ªã H∆∞∆°ng', 'n·ªØ', '2003-03-20', '0987654321', 'huong.tran@student.edu.vn', 'H√† N·ªôi', 'KTPM2021A'),
        ('SV003', 'L√™ VƒÉn ƒê·ª©c', 'nam', '2003-05-10', '0912345678', 'duc.le@student.edu.vn', 'ƒê√† N·∫µng', 'KTPM2021B'),
        ('SV004', 'Ph·∫°m Th·ªã Mai', 'n·ªØ', '2003-07-25', '0918765432', 'mai.pham@student.edu.vn', 'TP.HCM', 'HTTT2021A'),
        ('SV005', 'Ho√†ng VƒÉn Tu·∫•n', 'nam', '2003-09-12', '0923456789', 'tuan.hoang@student.edu.vn', 'H√† N·ªôi', 'KTPM2021A'),
        ('SV006', 'Nguy·ªÖn Th·ªã Lan', 'n·ªØ', '2003-11-08', '0934567890', 'lan.nguyen@student.edu.vn', 'TP.HCM', 'QTKD2021A'),
        ('SV007', 'Tr·∫ßn VƒÉn H·∫£i', 'nam', '2003-02-14', '0945678901', 'hai.tran@student.edu.vn', 'H√† N·ªôi', 'TA2021A'),
        ('SV008', 'L√™ Th·ªã Thu', 'n·ªØ', '2003-04-18', '0956789012', 'thu.le@student.edu.vn', 'ƒê√† N·∫µng', 'KTPM2021B'),
        ('SV009', 'Ph·∫°m VƒÉn Long', 'nam', '2003-06-22', '0967890123', 'long.pham@student.edu.vn', 'TP.HCM', 'HTTT2021A'),
        ('SV010', 'Ho√†ng Th·ªã Linh', 'n·ªØ', '2003-08-16', '0978901234', 'linh.hoang@student.edu.vn', 'H√† N·ªôi', 'QTKD2021A')
    ]
    
    for ma_sv, ho_ten, gioi_tinh, ngay_sinh, sdt, email, dia_chi, ma_lop in students_data:
        student = Student(
            ma_sv=ma_sv, ho_ten=ho_ten, gioi_tinh=gioi_tinh,
            ngay_sinh=ngay_sinh, dia_chi=dia_chi, ma_lop=ma_lop
        )
        db.session.add(student)
    
    db.session.commit()
    
    # 8. T·∫°o ƒêi·ªÉm th√†nh ph·∫ßn
    print("üìä T·∫°o ƒêi·ªÉm th√†nh ph·∫ßn...")
    import random
    
    subjects = ['IT001', 'IT002', 'IT003', 'EC001', 'EN001']
    students = ['SV001', 'SV002', 'SV003', 'SV004', 'SV005', 'SV006', 'SV007', 'SV008', 'SV009', 'SV010']
    teachers = ['GV001', 'GV002', 'GV003', 'GV004', 'GV005']
    
    for ma_sv in students:
        for ma_hp in subjects[:3]:  # M·ªói SV c√≥ 3 m√¥n
            teacher = random.choice(teachers)
            
            # Random ƒëi·ªÉm trong kho·∫£ng h·ª£p l√Ω
            diem_cc = round(random.uniform(6.0, 10.0), 1)
            diem_bt = round(random.uniform(5.0, 9.5), 1)
            diem_gk = round(random.uniform(4.0, 9.0), 1)
            
            diem_tp = DiemThanhPhan(
                ma_sv=ma_sv, ma_hp=ma_hp, ma_gv=teacher,
                diem_chuyen_can=diem_cc, diem_bai_tap=diem_bt, diem_giua_ky=diem_gk,
                hoc_ky='1', nam_hoc='2024-2025'
            )
            db.session.add(diem_tp)
    
    db.session.commit()
    
    # 9. T·∫°o ƒêi·ªÉm cu·ªëi k·ª≥
    print("üéØ T·∫°o ƒêi·ªÉm cu·ªëi k·ª≥...")
    
    for ma_sv in students:
        for ma_hp in subjects[:3]:  # M·ªói SV c√≥ 3 m√¥n
            # L·∫•y ƒëi·ªÉm th√†nh ph·∫ßn
            diem_tp_record = db.session.query(DiemThanhPhan).filter_by(ma_sv=ma_sv, ma_hp=ma_hp).first()
            if diem_tp_record:
                diem_tp_avg = (diem_tp_record.diem_chuyen_can + diem_tp_record.diem_bai_tap + diem_tp_record.diem_giua_ky) / 3
                
                # Random ƒëi·ªÉm cu·ªëi k·ª≥
                diem_ck = round(random.uniform(3.0, 9.5), 1)
                
                # T√≠nh ƒëi·ªÉm t·ªïng k·∫øt (30% TP + 70% CK)
                diem_tk = round(diem_tp_avg * 0.3 + diem_ck * 0.7, 1)
                
                # X√°c ƒë·ªãnh ƒëi·ªÉm ch·ªØ
                if diem_tk >= 9.0:
                    diem_chu = 'A'
                elif diem_tk >= 8.5:
                    diem_chu = 'B+'
                elif diem_tk >= 8.0:
                    diem_chu = 'B'
                elif diem_tk >= 7.0:
                    diem_chu = 'C+'
                elif diem_tk >= 6.5:
                    diem_chu = 'C'
                elif diem_tk >= 5.5:
                    diem_chu = 'D+'
                elif diem_tk >= 5.0:
                    diem_chu = 'D'
                else:
                    diem_chu = 'F'
                
                grade = Grade(
                    ma_sv=ma_sv, ma_hp=ma_hp,
                    diem_hp=diem_tk, ma_gv=diem_tp_record.ma_gv
                )
                db.session.add(grade)
    
    db.session.commit()
    
    # 10. T·∫°o SinhVienStats cho ML
    print("ü§ñ T·∫°o SinhVienStats...")
    
    for ma_sv in students:
        # T√≠nh GPA v√† s·ªë m√¥n tr∆∞·ª£t
        grades = db.session.query(Grade).filter_by(ma_sv=ma_sv).all()
        
        total_points = sum(g.diem_hp for g in grades)
        gpa = round(total_points / len(grades), 2) if grades else 0
        
        failed_subjects = sum(1 for g in grades if g.diem_hp < 5.0)
        
        stats = SinhVienStats(
            ma_sv=ma_sv,
            gpa_hien_tai=gpa,
            so_mon_da_truot=failed_subjects
        )
        db.session.add(stats)
    
    db.session.commit()
    
    print("‚úÖ Ho√†n th√†nh t·∫°o d·ªØ li·ªáu m·∫´u!")
    print(f"üìä Th·ªëng k√™:")
    print(f"   üë§ Users: {db.session.query(User).count()}")
    print(f"   üè¢ Khoa: {db.session.query(Khoa).count()}")
    print(f"   üéì Ng√†nh: {db.session.query(Nganh).count()}")
    print(f"   üè´ L·ªõp: {db.session.query(Lop).count()}")
    print(f"   üë®‚Äçüè´ Gi√°o vi√™n: {db.session.query(Teacher).count()}")
    print(f"   üìö H·ªçc ph·∫ßn: {db.session.query(HocPhan).count()}")
    print(f"   üë®‚Äçüéì Sinh vi√™n: {db.session.query(Student).count()}")
    print(f"   üìù ƒêi·ªÉm th√†nh ph·∫ßn: {db.session.query(DiemThanhPhan).count()}")
    print(f"   üéØ ƒêi·ªÉm cu·ªëi k·ª≥: {db.session.query(Grade).count()}")
    print(f"   ü§ñ SinhVienStats: {db.session.query(SinhVienStats).count()}")

def main():
    app = create_app()
    
    with app.app_context():
        print("üöÄ B·∫Øt ƒë·∫ßu reset v√† t·∫°o d·ªØ li·ªáu m·∫´u...")
        
        try:
            # X√≥a t·∫•t c·∫£ d·ªØ li·ªáu c≈©
            clear_all_data()
            
            # T·∫°o d·ªØ li·ªáu m·∫´u m·ªõi
            create_sample_data()
            
            print("üéâ Ho√†n th√†nh! Database ƒë√£ ƒë∆∞·ª£c reset v√† t·∫°o d·ªØ li·ªáu m·∫´u m·ªõi.")
            
        except Exception as e:
            print(f"‚ùå L·ªói: {e}")
            db.session.rollback()

if __name__ == '__main__':
    main()
